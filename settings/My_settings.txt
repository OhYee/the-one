#####################################
#  共有三种形式的结点，High(3个) Middle(30个) Low(100个)
#  每种可以发出三种不同优先级的信号 H M L
#  
#  结点数目为 5  25  150
#  时间间隔为 60~120min 20~40min 5~10min
#　也即事件生成频率应该为
#               H                  M            L
#  High     (720,1440)        (240,480)       (60,120)
#  Middle   (144,288)         (48,96)         (12,24)
#  Low      (24,48)           (8,16)          (2,4)
#
#####################################

############# 模拟总设置 #############
# 模拟名称
Scenario.name                = My_settings
# 是否模拟连接
Scenario.simulateConnections = true
# 模拟步长
Scenario.updateInterval      = 0.1
# 模拟时长（43200s == 12h）
Scenario.endTime             = 86400
#43200
# 结点总类数
Scenario.nrofHostGroups      = 3

############# 传输接口设置 #############
# 数据传输接口类型
Interface.type          = SimpleBroadcastInterface
# 传输速度
Interface.transmitSpeed = 500k
# 有效传输距离
Interface.transmitRange = 100


############# 结点设置 #############
## Group 默认值 ##
# 移动方式：随机路点模型
Group.movementModel  = RandomWaypoint
# 路由协议类型
Group.router         = SprayAndWaitRouterWithDiffCopies
 # 缓存大小
Group.bufferSize     = 1G
 # 传输间隔（不间断传输）
Group.waitTime       = 0, 0
# 接口类型数
Group.nrofInterfaces = 1
# 接口类型
Group.interface1     = Interface
# 移动速度
Group.speed          = 3, 7
# 失效时间(不失效)
Group.msgTtl         = 999999

## 组1-中优先级组 ##
# 类型名称
Group1.groupID        = High
# 接口数
Group1.nrofHosts      = 5

## 组2-中优先级组 ##
# 类型名称
Group2.groupID        = Middle
# 接口数
Group2.nrofHosts      = 25

## 组3-低优先级组 ##
# 类型名称
Group3.groupID        = Low
# 接口数
Group3.nrofHosts      = 150



############# 信息设置 #############
## 默认值 ##
# 信息种类数
Events.nrof = 9

## HighH ##
# 事件前缀ID
Events1.prefix = HighH
# 副本数
Events1.initCopies = 256
# 事件起始点范围
Events1.hosts= 0,5
# 事件产生事件间隔
Events1.interval = 720,1440
# 事件生成模型
Events1.class = MessageWithCopiesEventGenerator
# 事件大小
Events1.size = 500k,20M
# 事件结束点范围
Events1.tohosts = 0,180

## HighM ##
# 事件前缀ID
Events2.prefix = HighM     
# 副本数
Events2.initCopies = 128
# 事件起始点范围
Events2.hosts= 0,5
# 事件产生事件间隔
Events2.interval = 240,480
# 事件生成模型
Events2.class = MessageWithCopiesEventGenerator
# 事件大小
Events2.size = 500k,20M
# 事件结束点范围
Events2.tohosts = 0,180

## HighL ##
# 事件前缀ID
Events3.prefix = HighL     
# 副本数
Events3.initCopies = 64
# 事件起始点范围
Events3.hosts= 0,5
# 事件产生事件间隔
Events3.interval = 60,120
# 事件生成模型
Events3.class = MessageWithCopiesEventGenerator
# 事件大小
Events3.size = 500k,20M
# 事件结束点范围
Events3.tohosts = 0,180

## MiddleH ##
# 事件前缀ID
Events4.prefix = MiddleH
# 副本数
Events4.initCopies = 64
# 事件起始点范围
Events4.hosts= 5,30
# 事件产生事件间隔
Events4.interval = 144,288
# 事件生成模型
Events4.class = MessageWithCopiesEventGenerator
# 事件大小
Events4.size = 500k,20M
# 事件结束点范围
Events4.tohosts = 0,180

## MiddleM ##
# 事件前缀ID
Events5.prefix = MiddleM      
# 副本数
Events5.initCopies = 32
# 事件起始点范围
Events5.hosts= 5,30
# 事件产生事件间隔
Events5.interval = 48,96
# 事件生成模型
Events5.class = MessageWithCopiesEventGenerator
# 事件大小
Events5.size = 500k,20M
# 事件结束点范围
Events5.tohosts = 0,180

## MiddleL ##
# 事件前缀ID
Events6.prefix = MiddleL
# 副本数
Events6.initCopies = 16
# 事件起始点范围
Events6.hosts= 5,30
# 事件产生事件间隔
Events6.interval = 12,24
# 事件生成模型
Events6.class = MessageWithCopiesEventGenerator
# 事件大小
Events6.size = 500k,20M
# 事件结束点范围
Events6.tohosts = 0,180

## LowH ##
# 事件前缀ID
Events7.prefix = LowH      
# 副本数
Events7.initCopies = 16
# 事件起始点范围
Events7.hosts= 30,180
# 事件产生事件间隔
Events7.interval = 24,48
# 事件生成模型
Events7.class = MessageWithCopiesEventGenerator
# 事件大小
Events7.size = 500k,20M
# 事件结束点范围
Events7.tohosts = 0,180

## LowHM ##
# 事件前缀ID
Events8.prefix = LowM      
# 副本数
Events8.initCopies = 8
# 事件起始点范围
Events8.hosts= 30,180
# 事件产生事件间隔
Events8.interval = 8,16
# 事件生成模型
Events8.class = MessageWithCopiesEventGenerator
# 事件大小
Events8.size = 500k,20M
# 事件结束点范围
Events8.tohosts = 0,180

## LowL ##
# 事件前缀ID
Events9.prefix = LowL              
# 副本数
Events9.initCopies = 4
# 事件起始点范围
Events9.hosts= 30,180
# 事件产生事件间隔
Events9.interval = 2,4
# 事件生成模型
Events9.class = MessageWithCopiesEventGenerator
# 事件大小
Events9.size = 500k,20M
# 事件结束点范围
Events9.tohosts = 0,180

############# 地图/移动设置 #############
# 伪随机数种子
MovementModel.rngSeed = 1
# 地图大小
MovementModel.worldSize = 5000,5000
# 预先模拟时间
MovementModel.warmup = 1000


############# 报告 #############
# 报告种类数
Report.nrofReports = 4
# 报告预热时间
Report.warmup = 0
# 报告生成目录
Report.reportDir = reports/
# 报告生成模型
Report.report1 = MessageStatsReport
Report.report2 = ContactTimesReport
Report.report3 = DeliveredMessagesReport
Report.report4 = MyReport

############# 路由协议设置 #############
# 是否为二分散发等待模型
SprayAndWaitRouterWithDiffCopies.binaryMode = true

############# 优化设置 #############
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true

############# GUI设置 #############
# 要显示在log的结点数
GUI.EventLogPanel.nrofEvents = 100